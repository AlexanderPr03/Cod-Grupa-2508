@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100..900;1,100..900&display=swap');


body {
    margin: 0;
}

header {
    position: fixed;
    top: 0;
    left: 0;

    width: 100vw;
    height: 75px;
    background-color: rgb(0, 4, 59);

    z-index: 5;
}



nav {
    height: 100%;

    display: flex;
    justify-content: center;
    align-items: center;
}

.menu_list {
    /* list-style - scoateti sau adaugati caractersticile listei */
    list-style: none;

    display: flex;
    gap: 25px;


}


li {

    .menu_link {
        color: white;
        font-size: 20px;
        font-family: 'Roboto', sans-serif;
        text-decoration: none;
    }
}

.menu_link:hover {
    text-decoration: underline;
}

.phantom_div {
    height: 80px;
}


/* Elementele cu pozitia absoluta sunt izolate in cel mai apropiat element parinte care are pozitia setata */

.buy_button {
    position: absolute;
    right: 20px;
    bottom: 20px;

    width:140px;
    height: 40px;
    background-color: rgb(0, 4, 59);
    color: white;
    border: none;
    border-radius: 8px;

    /* cursor:pointer - face ca mouse-ul sa-si schimbe forma ca sa indice ca pe element se poate de apasat */
    cursor: pointer;
}


/* :active - aplica proprietatile cat timp un buton este apasat */
.buy_button:active {
    background-color: rgb(0, 12, 176);
    color: white;
 
}

.pret_produs {
    margin: 0;

    position: absolute;
    left: 20px;
    bottom: 20px;
}



.back_to_top {
    width: 50px;
    height: 50px;
    background-color: rgb(0, 4, 59);

    border-radius: 50%;

    position: fixed;
    right: 50px;
    bottom: 50px;

    z-index: 10;
}


/* Model de layout Grid - un alt model de layout */

/* FLEXBOX - Flexible Box */

.container {
    /* Proprietatea display - controleaza tipul de layout al elementului */
    /* display:block - default */
    /* height: 130vh; */

    /* display:flex - comanda care activeaza flexboxul in container */
    display: flex;

    flex-flow: reverse;
    /* justify-content - controleaza aranjarea elementelor pe orizontala (start, end, center) */
    /* justify-content: space-between; space-between - tot spatiul liber ramas in container este egal distribuit intre elemente, elementele sunt lipite de marginile containerului */

    /* justify-content: space-around;   - fiecare element are in stanga si dreapta acestuia un spatiu egal */
    
    justify-content: space-evenly;

    /* flex-wrap: wrap - flexboxul va lua elementele in plus si le va pune intr-un rand nou    */
    flex-wrap: wrap;


    gap: 25px;

    /* flex-direction: column-reverse; */
}





/* Pseudoclase - clase de stiluri care sunt aplicate unui element doar in anumite cazuri*/

/* :hover - activeaza proprietati cand dam cu mouse-ul peste elementul cu clasa specificata*/

/* .card:hover {
    background-color: rgb(164, 184, 255);
    width: 310px;
    height: 420px;
} */




.image_container {
    width: 100%;
    display: flex;

    justify-content: center;
}


.img_card {
    width: min(80%, 250px);
    /* max() */
}

/* .img_card:hover {
    width: 90%;
} */
footer {
    background-color: black;
    height: 500px;
    width: 100vw;
    margin-top: 100px;

    padding: 50px;
    box-sizing: border-box;

    display: flex;

    /* justify-content - orizontala */
    justify-content: center;

    /* align-items - verticala (start, center, end) */
    align-items: stretch; /* face ca elementele sa ocupe tot spatiul posibil pe verticala in container */
}

.links_footer {

    padding: 30px;
    width: 300px;
    background-color: white;
}

form {
    margin: 30px;

}

/* Selectorul atribut - selecteaza toate elementele de un tip care au atributul respectiv */
input[type='password'] {
    background-color: black;
}


.example_list {
    list-style: none;
}

.example_list_item {
    font-size: 20px;
    text-decoration: underline;
}


/* Tot blocul de CSS de mai jos este aplicat elementului virutal before */
.example_list_item::before {
    content: 'âœ…';
}

.example_list_item::after {
    
}


/* flex-basis - seteaza marimea initiala a unui element intr-un container flexbox
   flex-grow - specifica de cate ori elementul poate creste intr-un container flexbox relativ fata de marimea de baza
   flex-shrink - specifica de cate ori elementul se poate miscora intr-un container flexbox relativ fata de marimea de baza
 
   aceste 3 proprietati sunt unificate de proprietatea flex
*/


/* CSS - Cascading Style Sheets */


/* media query */

/* Bloc de CSS care va fi citit si aplicat doar daca conditia/conditiile lipite media query-ului sunt indeplinite */

/* Media query pentru telefoanele mobile */
@media (max-width: 480px) {

    header {
        background: red;
    }

    .pret_produs {
        font-size: 5vw;
    }

}

/* Media query pentru tablete */
@media (min-width:481px) {
    /* .container {
        justify-content: left;
    } */
}


/* Media query pentru tabletele mari, laptopuri */
@media (min-width: 769px) {
    /* header {
        text-decoration: underline;
    } */
}

@media (orientation:landscape) {
    /* body {
        background-color: black
    }; */
}